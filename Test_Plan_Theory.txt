Структура тест плана
Различные команды могут придумать разные разделы, которые будут включены в план тестирования. Тем не менее, за основу можно использования шаблоны тест планов, а потом дополнять его всем необходимым, чтобы он соответствовал вашим требованиям. Тест план содержит следующие разделы.
1. Introduction  (Введение)– данный раздел содержит ответы на вопрос: Что мы будем делать? Зачем? Для какого клиента? Кто будет использовать продукт? Для чего будет использоваться продукт? Хочется отметить, что здесь нужно быть максимально конкретным, не нужно использовать общих фраз.
2. ScopeofWork  (Объем работ)– в этом разделе содержится информация о том, какие компоненты и функции, нужно протестировать, а какие тестироваться не будут. Также, какое программное обеспечение нам понадобится?
3. QualityandAcceptanceCriteria  (Критерии качества и приемки)- здесь определяется критерии, по которым оценивается качество продукта и условия завершения тестирования.
4. CriticalSuccessFactors (Критические факторы успеха)– этот пункт отражает ответы на вопросы: что нужно, чтобы проект завершился успешно. Что необходимо для качественного тестирования (полноценный доступ в багтрекинговую систему, тест менеджмент систему, отсутствие задержек от команды разработки и тд.)
5. RiskAssessment  (Оценка рисков)— это самая важная секция, и она специфична для каждого проекта. Важно продумать риски, а не взять уже придуманный кем-то список. Следует описать все, что может пойти не так и добавить меры по предотвращению.
6. Resources (Ресурсы)– суда относятся все ключевые ресурсы, необходимые для проведения тестирования: команда, тулы, железо.
7. TestDocumentation (Тестовая документация)– в этом пункте содержит список проектных документов: Testplan, Testresultreport, Testcases, Bugreports. Также указывает: Ответственных и частоту их создания. Здесь же не забываем перечислить место хранения тест кейсов, тест планов и тд. (багтрекинг, облачные хранилища, сервер и т.п.)
8. TestStrategy  (Тестовая стратегия)– этот пункт содержит:
* EntryCriteria
* TestMethods (manual, automated)
* Test types (functional, installation, regression, new feature, compatibility, integration, localization, etc)
* Test levels (smoke, critical, extended)
9. TestingSchedule (Расписание тестирования)– здесь отражаются сроки проведения тестирования.


Как написать хороший тест план?
1. Проанализировать продукт
Первым шагом к созданию плана тестирования является анализ продукта, его функций и функциональных возможностей, чтобы получить более глубокое понимание. Кроме того, изучите требования к бизнесу и то, чего клиент хочет достичь от конечного продукта. Понимать пользователей и использовать возможности тестирования продукта с точки зрения пользователя.
2. Разработка стратегии тестирования
После того как вы проанализировали продукт, вы готовы разработать стратегию тестирования для разных уровней. Ваша стратегия тестирования может состоять из нескольких методов тестирования. Соблюдая правила использования и бизнес-требования, вы решаете, какие методы тестирования будут использоваться.
Например, если вы создаете тест план, пример на русском веб-сайте с тысячами онлайн-пользователей, вы включите «Нагрузочное тестирование» в свой план тестирования. Точно так же, если вы работаете на веб-сайте электронной коммерции, который включает онлайн-транзакции в денежной форме, вы будете подчеркивать безопасность и тестирование на уязвимость.
3. Определить область действия
Хороший план тестирования четко определяет область тестирования и границы. Вы можете использовать документ спецификации требований, чтобы определить, что включено в область действия и что исключено. Составьте список «Проверяемые функции» и «Возможности, которые тестироваться не будут». Это сделает ваш тест план конкретным и полезным. Вам также может потребоваться указать список результатов.  Например, если вы выполняете нагрузочное тестирование приложения, вам необходимо указать предел максимальной и минимальной нагрузки тестируемых пользователей.
4. Разработка графика
Сознавая стратегию тестирования и сферу действия, вы можете разработать график тестирования. Разделите работу на тестирование и оцените необходимые усилия. Вы также можете оценить необходимые ресурсы для каждой задачи. Теперь вы можете включить график тестирования в свой тест план, который поможет вам контролировать ход процесса тестирования.
5. Определите роли и обязанности
В хорошем тест плане четко перечислены роли и обязанности команды тестирования и менеджера команды. Раздел «Роли и обязанности» вместе с «графиком» рассказывает всем, что делать и когда делать.
6. Предвидеть риски
Ваш тест план будет неполным без ожидаемых рисков, методов смягчения и ответов на риск. Существует несколько типов рисков при тестировании программного обеспечения, таких как расписание, бюджет, умения, знания и тд.

